{"title":"Encuentra tu centro","markdown":{"yaml":{"title":"Encuentra tu centro","page-layout":"full","format":{"html":{"toc":false}}},"containsRefs":false,"markdown":"\n\n<link href=\"https://fonts.googleapis.com/css2?family=Savate&display=swap\" rel=\"stylesheet\">\n\n<style>\n  :root {\n    --burdeos: #800000;\n    --burdeos-hover: #a3333d;\n    --gris-claro: #f4f1f1;\n    --blanco-roto: #fafafa;\n    --texto-oscuro: #222222;\n    --borde-gris: #ccc;\n\n    /* layout vars */\n    --sidebar-w: 300px;  /* ancho columna filtros */\n    --gap: 1em;        /* separaci√≥n columnas */\n  }\n\n  body {\n    font-family: 'Savate', sans-serif !important;\n    padding: 0 !important;\n    background-color: var(--blanco-roto) !important;\n    padding-top: 100px !important; /* separa del navbar fijo */\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n  }\n\n  /* Contenedor 2 columnas */\n  .layout{\n    display:flex;\n    flex-wrap:wrap;\n    gap: var(--gap);\n    width: 100% !important;\n    max-width: none !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    margin-top: 30px !important; /* ajusta a gusto */\n    align-items: flex-start !important;\n  }\n\n  /* Filtros (izquierda) */\n  .sidebar{\n    flex: 0 0 var(--sidebar-w);\n    max-width: var(--sidebar-w);\n    background-color: var(--gris-claro) !important;\n    padding: 1em 1em 1em 1em !important;   /* usa 0.5em si quieres un poco de aire */\n    border-radius: 12px;\n    box-shadow: 0 2px 6px rgba(0,0,0,.05);\n  }\n\n  .sidebar h2{\n  margin-top: 0 !important;\n  /* opcional: ajusta el espacio hacia abajo */\n  margin-bottom: .5em;\n}\n\n  /* Columna derecha (mapa + lista) */\n  .main{\n    flex: 1 1 0;\n    max-width: none !important;\n    margin: 0 0 2em 0 !important; /* sin centrado */\n  }\n\n  h2 { color: #000 !important; }\n\n  /* Mapa */\n  #map{\n    width: 100%;\n    height: clamp(420px, 75dvh, 900px);\n    border-radius: 12px;\n    margin-bottom: 1em;\n    box-shadow: 0 2px 8px rgba(0,0,0,.1);\n  }\n\n  /* Lista resultados */\n  #centerList { list-style: none; padding-left: 0; margin-top: 1em; }\n  #centerList li {\n    background: var(--gris-claro);\n    padding: .6em .8em;\n    border-radius: 8px;\n    margin-bottom: .5em;\n  }\n  #centerList a { text-decoration: none; color: var(--burdeos); font-weight: bold; }\n\n  /* Oculta el ‚Äú#‚Äù de ancla en t√≠tulos */\n  h2 a.anchorjs-link { display: none !important; }\n\n  /* Botones */\n  button{\n    background-color: var(--burdeos);\n    color: #fff;\n    border: none;\n    border-radius: 6px;\n    padding: 12px;\n    font-weight: bold;\n    width: 100%;\n    margin-bottom: 1em;\n    cursor: pointer;\n    transition: background-color .3s;\n  }\n  button:hover{ background-color: var(--burdeos-hover); }\n\n  /* Estilos de yoga: UNA columna */\n  #styleCheckboxes { display: block !important; max-height: 250px; overflow-y: auto; border: 1px solid #ccc; padding: .5em; }\n  #styleCheckboxes label { display: block !important; margin-bottom: .3em; }\n\n  /* Responsive */\n  @media (max-width: 768px){\n    .layout{ flex-direction: column; align-items: stretch; }\n    .sidebar{ width: 100%; max-width: 100%; }\n    .main{ width: 100%; flex: 1 1 100%; padding: 0 .5em; }\n    #map{ height: 50vh !important; }\n  }\n\n\n\n\n\n/* Elimina la columna de margen y el padding lateral de Quarto */\n.page-columns .content{\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  grid-template-columns: [screen-start] minmax(0,1fr) [screen-end] !important;\n}\n.page-columns .content > *{ grid-column: screen !important; }\n\n/* Quita l√≠mites y centrados de contenedores de Quarto */\n.quarto-container, .content, main, .page-layout, .column-page, #quarto-content{\n  max-width: none !important;\n  width: 100% !important;\n  margin: 0 !important;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n}\n\n\n\n\n/* H1 responsivo y sin cortes (t√≠tulo de la p√°gina de Quarto) */\n.quarto-title-block .title, .page-title, h1 {\n  font-size: clamp(1.6rem, 2.8vw, 2.2rem);\n  line-height: 1.25;\n  margin: 0 0 .5rem 0 !important;\n  padding: 0 1rem;              /* un poco de aire lateral */\n  white-space: normal;          /* permite salto de l√≠nea */\n  overflow-wrap: anywhere;      /* evita ‚Äúcortes‚Äù raros */\n}\n/* Asegura padding horizontal del contenedor del t√≠tulo */\n.quarto-title-block, .page-header {\n  padding-left: 1rem !important;\n  padding-right: 1rem !important;\n}\n\n/* Variante secundaria para el bot√≥n limpiar */\nbutton.secondary{\n  background:#fff;\n  color: var(--burdeos);\n  border: 1px solid var(--burdeos);\n}\nbutton.secondary:hover{\n  background:#f7f7f7;\n}\n\n/* Bot√≥n \"Limpiar filtros\" m√°s bajo/compacto */\n#clearFilters{\n  padding: 6px 10px;     /* antes: 12px */\n  font-size: 0.9rem;     /* un poco m√°s peque√±o */\n  line-height: 1.1;      /* reduce la altura de l√≠nea */\n  margin-bottom: .5em;   /* menos espacio debajo */\n}\n\n\n.city-autocomplete{ position: relative; }\n#citySuggestions{\n  list-style: none;\n  margin: .25rem 0 0 0; padding: 0;\n  position: absolute; top: calc(100% - 10px); left: 0; right: 0;\n  background: #fff; border: 1px solid var(--borde-gris);\n  border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,.06);\n  display: none; max-height: 200px; overflow-y: auto; z-index: 1000;\n}\n#citySuggestions li{ padding: .5rem .6rem; cursor: pointer; }\n#citySuggestions li:hover{ background: #f7f7f7; }\n\n\n\n</style>\n\n\n\n\n\n```{=html}\n<div class=\"layout\">\n\n  <!-- <div style=\"margin-bottom: 1.5em;\">\n    <p style=\"font-size: 1.1em; line-height: 1.6;\">\n      Bienvenido al directorio de centros de yoga en Espa√±a. Explora, filtra y descubre espacios cerca de ti donde practicar distintos estilos de yoga, aprender con profesores especializados y conectar con una comunidad que comparte tu inter√©s por el bienestar f√≠sico y mental. Utiliza los filtros para buscar por ciudad, estilo, idioma o proximidad. ¬°Tu pr√≥ximo centro de yoga est√° m√°s cerca de lo que crees!\n    </p>\n  </div> -->\n\n\n  <div class=\"sidebar\">\n   \n\n    <button id=\"clearFilters\" class=\"secondary\">Limpiar filtros</button>\n\n    <button id=\"findNearby\">Cerca de m√≠</button>\n\n\n  <div class=\"city-autocomplete\">\n    <input\n      type=\"text\"\n      id=\"citySearch\"\n      placeholder=\"Buscar centros en mi ciudad\"\n      style=\"width: 100%; padding: 10px; margin-bottom: 10px;\"\n      autocomplete=\"off\"\n    />\n    <ul id=\"citySuggestions\" role=\"listbox\" aria-label=\"Sugerencias de ciudades\"></ul>\n  </div>\n\n\n    <div id=\"styleFilters\" style=\"margin-bottom: 1em;\">\n      <strong>Estilos de yoga</strong><br />\n      <div id=\"styleCheckboxes\"></div>\n    </div>\n\n    \n    <!-- <details open style=\"margin-bottom: 1em;\">\n  <summary><strong>Estilos de yoga</strong></summary>\n  <div id=\"styleCheckboxes\" style=\"\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 0.5em;\n    margin-top: 0.5em;\n    max-height: 250px;\n    overflow-y: auto;\n    border: 1px solid #ccc;\n    padding: 0.5em;\n  \"></div>\n</details> -->\n\n\n\n\n    <div style=\"margin-bottom: 1em;\">\n      <strong>Profesores</strong><br />\n      <select id=\"professorSelect\" style=\"width: 100%; padding: 10px;\">\n        <option value=\"\">Todos los profesores</option>\n      </select>\n    </div>\n\n    <div id=\"languageFilters\" style=\"margin-bottom: 1em;\">\n      <strong>Idiomas</strong><br />\n      <label><input type=\"checkbox\" value=\"Spanish\"> Espa√±ol</label>\n      <label><input type=\"checkbox\" value=\"English\"> Ingl√©s</label>\n    </div>\n\n    \n\n  </div>\n\n  <div class=\"main\">\n    <div id=\"map\"></div>\n    <h2>Centros de Yoga</h2>\n    <ul id=\"centerList\"></ul>\n    <p id=\"noResults\" style=\"display:none; color: red;\">No centers found for your search.</p>\n  </div>\n\n</div>\n```\n\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet/dist/leaflet.css\" />\n<script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"></script>\n\n<script>\nlet centers = [];\nlet professors = [];\nlet usingNearby = false;\nlet userLat = null;\nlet userLng = null;\n\nconst input = document.getElementById(\"citySearch\");\nconst suggestions = document.getElementById(\"citySuggestions\");\nlet checkboxes = []; // Will be populated dynamically\nconst languageBoxes = document.querySelectorAll(\"#languageFilters input[type=checkbox]\");\nconst professorSelect = document.getElementById(\"professorSelect\");\nconst findNearbyBtn = document.getElementById(\"findNearby\");\nconst listEl = document.getElementById(\"centerList\");\nconst noResults = document.getElementById(\"noResults\");\n\nconst map = L.map('map').setView([40.0, -3.7], 6);\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 18,\n  attribution: '&copy; OpenStreetMap'\n}).addTo(map);\nlet markers = [];\n\n\nconst clearBtn = document.getElementById(\"clearFilters\");\n\n// Valores por defecto del mapa (los que ya usas)\nconst DEFAULT_LAT = 40.0;\nconst DEFAULT_LNG = -3.7;\nconst DEFAULT_ZOOM = 6;\n\nclearBtn.addEventListener(\"click\", () => {\n  // Apaga ‚Äúcerca de m√≠‚Äù\n  usingNearby = false;\n  userLat = null;\n  userLng = null;\n  findNearbyBtn.textContent = \"Cerca de m√≠\";\n\n  // Resetea filtros\n  input.value = \"\";\n  suggestions.style.display = \"none\";\n\n  if (checkboxes && checkboxes.length) {\n    checkboxes.forEach(cb => cb.checked = false);\n  }\n  if (languageBoxes && languageBoxes.length) {\n    languageBoxes.forEach(cb => cb.checked = false);\n  }\n  professorSelect.value = \"\";\n\n  // Centra el mapa por defecto y repinta\n  map.setView([DEFAULT_LAT, DEFAULT_LNG], DEFAULT_ZOOM);\n  updateDisplay(true, true);\n});\n\n\n\n// üîß Asegura que Leaflet recalcula el tama√±o cuando la p√°gina carga o cambia de tama√±o\nwindow.addEventListener('load', () => setTimeout(() => map.invalidateSize(), 0));\nwindow.addEventListener('resize', () => map.invalidateSize());\n\nfunction updateDisplay(doZoom = false, updateMarkers = true) {\n  const cityVal = input.value.toLowerCase().trim();\n  const selectedStyles = Array.from(checkboxes).filter(cb => cb.checked).map(cb => cb.value);\n  const selectedLangs = Array.from(languageBoxes).filter(cb => cb.checked).map(cb => cb.value);\n  const selectedProf = professorSelect.value;\n\n  const filtered = centers.filter(c => {\n    const matchCity = c.city.toLowerCase().includes(cityVal);\n    const matchStyle = selectedStyles.length === 0 || c.styles.some(style => selectedStyles.includes(style));\n    const matchLang = selectedLangs.length === 0 || c.languages.some(lang => selectedLangs.includes(lang));\n    const matchProf = !selectedProf || c.professors.includes(selectedProf);\n    const matchNearby = !usingNearby || (\n      userLat !== null && userLng !== null &&\n      getDistance(userLat, userLng, c.lat, c.lng) <= 2\n    );\n    return matchNearby && matchCity && matchStyle && matchLang && matchProf;\n  });\n\n  listEl.innerHTML = \"\";\n  filtered.forEach(c => {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `<a href=\"${c.page}\">${c.name} (${c.city})</a>`;\n    listEl.appendChild(li);\n  });\n\n  noResults.style.display = filtered.length === 0 ? \"block\" : \"none\";\n\n  if (updateMarkers) {\n    markers.forEach(m => map.removeLayer(m));\n    markers = [];\n    filtered.forEach(c => {\n      const marker = L.marker([c.lat, c.lng]).addTo(map)\n        .bindPopup(`<a href=\"${c.page}\">${c.name}</a><br>${c.city}`);\n      markers.push(marker);\n    });\n  }\n\n  if (doZoom && cityVal) {\n    const exactMatch = centers.filter(c => c.city.toLowerCase() === cityVal);\n    if (exactMatch.length > 0) {\n      const avgLat = exactMatch.reduce((sum, c) => sum + c.lat, 0) / exactMatch.length;\n      const avgLng = exactMatch.reduce((sum, c) => sum + c.lng, 0) / exactMatch.length;\n      map.setView([avgLat, avgLng], 12);\n    }\n  }\n\n  if (doZoom && usingNearby && userLat && userLng) {\n    map.setView([userLat, userLng], 14);\n  }\n}\n\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  const toRad = deg => deg * Math.PI / 180;\n  const R = 6371;\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat/2)**2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLng/2)**2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\nfindNearbyBtn.addEventListener(\"click\", () => {\n  if (!usingNearby) {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation not supported\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(pos => {\n      userLat = pos.coords.latitude;\n      userLng = pos.coords.longitude;\n      usingNearby = true;\n\n      // Clear city input when nearby search is activated\n      input.value = \"\";\n      findNearbyBtn.textContent = \"‚úÖ Mostrando centros cerca de m√≠\";\n      updateDisplay(true, true);\n    }, () => {\n      alert(\"Unable to get location\");\n    });\n  } else {\n    usingNearby = false;\n    userLat = null;\n    userLng = null;\n    findNearbyBtn.textContent = \"Cerca de m√≠\";\n    updateDisplay(true, true);\n  }\n});\n\n\nfetch(\"data/centers.json\")\n  .then(res => res.json())\n  .then(data => {\n    centers = data;\n    return fetch(\"data/professors.json\");\n  })\n  .then(res => res.json())\n  .then(data => {\n    professors = data;\n    professors.forEach(p => {\n      const option = document.createElement(\"option\");\n      option.value = p.id;\n      option.textContent = p.name;\n      professorSelect.appendChild(option);\n    });\n    updateDisplay(true, true);\n  })\n  .then(() => {\n  return fetch(\"data/styles.json\");\n})\n.then(res => res.json())\n.then(styles => {\n  const container = document.getElementById(\"styleCheckboxes\");\n  styles.forEach(style => {\n    const label = document.createElement(\"label\");\n    label.innerHTML = `<input type=\"checkbox\" value=\"${style}\"> ${style}`;\n    container.appendChild(label);\n  });\n\n  // Reassign checkboxes variable now that they exist\n  checkboxes = document.querySelectorAll(\"#styleFilters input[type=checkbox]\");\n  checkboxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\n\n  // Also re-run URL params logic in case styles are pre-selected\n  const stylesParam = new URLSearchParams(window.location.search).get(\"styles\");\n  if (stylesParam) {\n    const styleValues = stylesParam.split(\",\");\n    checkboxes.forEach(cb => {\n      cb.checked = styleValues.includes(cb.value);\n    });\n  }\n\n  updateDisplay(true, true);\n});\n\n\n\n\n\ninput.addEventListener(\"focus\", () => {\n  suggestions.innerHTML = \"\";\n  // No mostramos nada al enfocar; se mostrar√° cuando el usuario escriba\n  suggestions.style.display = \"none\";\n});\n\n\ndocument.addEventListener(\"click\", (e) => {\n  if (!input.contains(e.target) && !suggestions.contains(e.target)) {\n    suggestions.style.display = \"none\";\n  }\n});\n\ninput.addEventListener(\"input\", () => {\n  const val = input.value.toLowerCase().trim();\n  suggestions.innerHTML = \"\";\n\n  // Si no hay texto, ocultamos el men√∫\n  if (val.length === 0) {\n    suggestions.style.display = \"none\";\n    return;\n  }\n\n  const allCities = [...new Set(centers.map(c => c.city))];\n  const matches = allCities.filter(c => c.toLowerCase().startsWith(val));\n\n  if (matches.length > 0) {\n    matches.forEach(city => {\n      const li = document.createElement(\"li\");\n      li.textContent = city;\n      li.style.padding = \"5px\";\n      li.style.cursor = \"pointer\";\n      li.addEventListener(\"click\", () => {\n        usingNearby = false;\n        userLat = null;\n        userLng = null;\n        findNearbyBtn.textContent = \"Cerca de m√≠\";\n        input.value = city;\n        suggestions.style.display = \"none\";\n        updateDisplay(true, true);\n      });\n      suggestions.appendChild(li);\n    });\n    suggestions.style.display = \"block\";\n  } else {\n    suggestions.style.display = \"none\";\n  }\n});\n\ncheckboxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\nlanguageBoxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\nprofessorSelect.addEventListener(\"change\", () => updateDisplay(false, true));\n\n\n// Read URL parameters on page load\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // City\n  const cityParam = urlParams.get(\"city\");\n  if (cityParam) {\n    input.value = cityParam;\n  }\n\n  // Yoga styles (comma-separated)\n  const stylesParam = urlParams.get(\"styles\");\n  if (stylesParam) {\n    const styleValues = stylesParam.split(\",\");\n    checkboxes.forEach(cb => {\n      cb.checked = styleValues.includes(cb.value);\n    });\n  }\n\n  // Languages (comma-separated)\n  const langsParam = urlParams.get(\"langs\");\n  if (langsParam) {\n    const langValues = langsParam.split(\",\");\n    languageBoxes.forEach(cb => {\n      cb.checked = langValues.includes(cb.value);\n    });\n  }\n\n  // Professor (exact id)\n  const profParam = urlParams.get(\"prof\");\n  if (profParam) {\n    professorSelect.value = profParam;\n  }\n\n  // Nearby search\n  const nearbyParam = urlParams.get(\"nearby\");\n  if (nearbyParam === \"1\") {\n    findNearbyBtn.click();\n  } else {\n    updateDisplay(true, true);\n  }\n});\n\n\n\n</script>\n\n","srcMarkdownNoYaml":"\n\n<link href=\"https://fonts.googleapis.com/css2?family=Savate&display=swap\" rel=\"stylesheet\">\n\n<style>\n  :root {\n    --burdeos: #800000;\n    --burdeos-hover: #a3333d;\n    --gris-claro: #f4f1f1;\n    --blanco-roto: #fafafa;\n    --texto-oscuro: #222222;\n    --borde-gris: #ccc;\n\n    /* layout vars */\n    --sidebar-w: 300px;  /* ancho columna filtros */\n    --gap: 1em;        /* separaci√≥n columnas */\n  }\n\n  body {\n    font-family: 'Savate', sans-serif !important;\n    padding: 0 !important;\n    background-color: var(--blanco-roto) !important;\n    padding-top: 100px !important; /* separa del navbar fijo */\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n  }\n\n  /* Contenedor 2 columnas */\n  .layout{\n    display:flex;\n    flex-wrap:wrap;\n    gap: var(--gap);\n    width: 100% !important;\n    max-width: none !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    margin-top: 30px !important; /* ajusta a gusto */\n    align-items: flex-start !important;\n  }\n\n  /* Filtros (izquierda) */\n  .sidebar{\n    flex: 0 0 var(--sidebar-w);\n    max-width: var(--sidebar-w);\n    background-color: var(--gris-claro) !important;\n    padding: 1em 1em 1em 1em !important;   /* usa 0.5em si quieres un poco de aire */\n    border-radius: 12px;\n    box-shadow: 0 2px 6px rgba(0,0,0,.05);\n  }\n\n  .sidebar h2{\n  margin-top: 0 !important;\n  /* opcional: ajusta el espacio hacia abajo */\n  margin-bottom: .5em;\n}\n\n  /* Columna derecha (mapa + lista) */\n  .main{\n    flex: 1 1 0;\n    max-width: none !important;\n    margin: 0 0 2em 0 !important; /* sin centrado */\n  }\n\n  h2 { color: #000 !important; }\n\n  /* Mapa */\n  #map{\n    width: 100%;\n    height: clamp(420px, 75dvh, 900px);\n    border-radius: 12px;\n    margin-bottom: 1em;\n    box-shadow: 0 2px 8px rgba(0,0,0,.1);\n  }\n\n  /* Lista resultados */\n  #centerList { list-style: none; padding-left: 0; margin-top: 1em; }\n  #centerList li {\n    background: var(--gris-claro);\n    padding: .6em .8em;\n    border-radius: 8px;\n    margin-bottom: .5em;\n  }\n  #centerList a { text-decoration: none; color: var(--burdeos); font-weight: bold; }\n\n  /* Oculta el ‚Äú#‚Äù de ancla en t√≠tulos */\n  h2 a.anchorjs-link { display: none !important; }\n\n  /* Botones */\n  button{\n    background-color: var(--burdeos);\n    color: #fff;\n    border: none;\n    border-radius: 6px;\n    padding: 12px;\n    font-weight: bold;\n    width: 100%;\n    margin-bottom: 1em;\n    cursor: pointer;\n    transition: background-color .3s;\n  }\n  button:hover{ background-color: var(--burdeos-hover); }\n\n  /* Estilos de yoga: UNA columna */\n  #styleCheckboxes { display: block !important; max-height: 250px; overflow-y: auto; border: 1px solid #ccc; padding: .5em; }\n  #styleCheckboxes label { display: block !important; margin-bottom: .3em; }\n\n  /* Responsive */\n  @media (max-width: 768px){\n    .layout{ flex-direction: column; align-items: stretch; }\n    .sidebar{ width: 100%; max-width: 100%; }\n    .main{ width: 100%; flex: 1 1 100%; padding: 0 .5em; }\n    #map{ height: 50vh !important; }\n  }\n\n\n\n\n\n/* Elimina la columna de margen y el padding lateral de Quarto */\n.page-columns .content{\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  grid-template-columns: [screen-start] minmax(0,1fr) [screen-end] !important;\n}\n.page-columns .content > *{ grid-column: screen !important; }\n\n/* Quita l√≠mites y centrados de contenedores de Quarto */\n.quarto-container, .content, main, .page-layout, .column-page, #quarto-content{\n  max-width: none !important;\n  width: 100% !important;\n  margin: 0 !important;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n}\n\n\n\n\n/* H1 responsivo y sin cortes (t√≠tulo de la p√°gina de Quarto) */\n.quarto-title-block .title, .page-title, h1 {\n  font-size: clamp(1.6rem, 2.8vw, 2.2rem);\n  line-height: 1.25;\n  margin: 0 0 .5rem 0 !important;\n  padding: 0 1rem;              /* un poco de aire lateral */\n  white-space: normal;          /* permite salto de l√≠nea */\n  overflow-wrap: anywhere;      /* evita ‚Äúcortes‚Äù raros */\n}\n/* Asegura padding horizontal del contenedor del t√≠tulo */\n.quarto-title-block, .page-header {\n  padding-left: 1rem !important;\n  padding-right: 1rem !important;\n}\n\n/* Variante secundaria para el bot√≥n limpiar */\nbutton.secondary{\n  background:#fff;\n  color: var(--burdeos);\n  border: 1px solid var(--burdeos);\n}\nbutton.secondary:hover{\n  background:#f7f7f7;\n}\n\n/* Bot√≥n \"Limpiar filtros\" m√°s bajo/compacto */\n#clearFilters{\n  padding: 6px 10px;     /* antes: 12px */\n  font-size: 0.9rem;     /* un poco m√°s peque√±o */\n  line-height: 1.1;      /* reduce la altura de l√≠nea */\n  margin-bottom: .5em;   /* menos espacio debajo */\n}\n\n\n.city-autocomplete{ position: relative; }\n#citySuggestions{\n  list-style: none;\n  margin: .25rem 0 0 0; padding: 0;\n  position: absolute; top: calc(100% - 10px); left: 0; right: 0;\n  background: #fff; border: 1px solid var(--borde-gris);\n  border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,.06);\n  display: none; max-height: 200px; overflow-y: auto; z-index: 1000;\n}\n#citySuggestions li{ padding: .5rem .6rem; cursor: pointer; }\n#citySuggestions li:hover{ background: #f7f7f7; }\n\n\n\n</style>\n\n\n\n\n\n```{=html}\n<div class=\"layout\">\n\n  <!-- <div style=\"margin-bottom: 1.5em;\">\n    <p style=\"font-size: 1.1em; line-height: 1.6;\">\n      Bienvenido al directorio de centros de yoga en Espa√±a. Explora, filtra y descubre espacios cerca de ti donde practicar distintos estilos de yoga, aprender con profesores especializados y conectar con una comunidad que comparte tu inter√©s por el bienestar f√≠sico y mental. Utiliza los filtros para buscar por ciudad, estilo, idioma o proximidad. ¬°Tu pr√≥ximo centro de yoga est√° m√°s cerca de lo que crees!\n    </p>\n  </div> -->\n\n\n  <div class=\"sidebar\">\n   \n\n    <button id=\"clearFilters\" class=\"secondary\">Limpiar filtros</button>\n\n    <button id=\"findNearby\">Cerca de m√≠</button>\n\n\n  <div class=\"city-autocomplete\">\n    <input\n      type=\"text\"\n      id=\"citySearch\"\n      placeholder=\"Buscar centros en mi ciudad\"\n      style=\"width: 100%; padding: 10px; margin-bottom: 10px;\"\n      autocomplete=\"off\"\n    />\n    <ul id=\"citySuggestions\" role=\"listbox\" aria-label=\"Sugerencias de ciudades\"></ul>\n  </div>\n\n\n    <div id=\"styleFilters\" style=\"margin-bottom: 1em;\">\n      <strong>Estilos de yoga</strong><br />\n      <div id=\"styleCheckboxes\"></div>\n    </div>\n\n    \n    <!-- <details open style=\"margin-bottom: 1em;\">\n  <summary><strong>Estilos de yoga</strong></summary>\n  <div id=\"styleCheckboxes\" style=\"\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 0.5em;\n    margin-top: 0.5em;\n    max-height: 250px;\n    overflow-y: auto;\n    border: 1px solid #ccc;\n    padding: 0.5em;\n  \"></div>\n</details> -->\n\n\n\n\n    <div style=\"margin-bottom: 1em;\">\n      <strong>Profesores</strong><br />\n      <select id=\"professorSelect\" style=\"width: 100%; padding: 10px;\">\n        <option value=\"\">Todos los profesores</option>\n      </select>\n    </div>\n\n    <div id=\"languageFilters\" style=\"margin-bottom: 1em;\">\n      <strong>Idiomas</strong><br />\n      <label><input type=\"checkbox\" value=\"Spanish\"> Espa√±ol</label>\n      <label><input type=\"checkbox\" value=\"English\"> Ingl√©s</label>\n    </div>\n\n    \n\n  </div>\n\n  <div class=\"main\">\n    <div id=\"map\"></div>\n    <h2>Centros de Yoga</h2>\n    <ul id=\"centerList\"></ul>\n    <p id=\"noResults\" style=\"display:none; color: red;\">No centers found for your search.</p>\n  </div>\n\n</div>\n```\n\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet/dist/leaflet.css\" />\n<script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"></script>\n\n<script>\nlet centers = [];\nlet professors = [];\nlet usingNearby = false;\nlet userLat = null;\nlet userLng = null;\n\nconst input = document.getElementById(\"citySearch\");\nconst suggestions = document.getElementById(\"citySuggestions\");\nlet checkboxes = []; // Will be populated dynamically\nconst languageBoxes = document.querySelectorAll(\"#languageFilters input[type=checkbox]\");\nconst professorSelect = document.getElementById(\"professorSelect\");\nconst findNearbyBtn = document.getElementById(\"findNearby\");\nconst listEl = document.getElementById(\"centerList\");\nconst noResults = document.getElementById(\"noResults\");\n\nconst map = L.map('map').setView([40.0, -3.7], 6);\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 18,\n  attribution: '&copy; OpenStreetMap'\n}).addTo(map);\nlet markers = [];\n\n\nconst clearBtn = document.getElementById(\"clearFilters\");\n\n// Valores por defecto del mapa (los que ya usas)\nconst DEFAULT_LAT = 40.0;\nconst DEFAULT_LNG = -3.7;\nconst DEFAULT_ZOOM = 6;\n\nclearBtn.addEventListener(\"click\", () => {\n  // Apaga ‚Äúcerca de m√≠‚Äù\n  usingNearby = false;\n  userLat = null;\n  userLng = null;\n  findNearbyBtn.textContent = \"Cerca de m√≠\";\n\n  // Resetea filtros\n  input.value = \"\";\n  suggestions.style.display = \"none\";\n\n  if (checkboxes && checkboxes.length) {\n    checkboxes.forEach(cb => cb.checked = false);\n  }\n  if (languageBoxes && languageBoxes.length) {\n    languageBoxes.forEach(cb => cb.checked = false);\n  }\n  professorSelect.value = \"\";\n\n  // Centra el mapa por defecto y repinta\n  map.setView([DEFAULT_LAT, DEFAULT_LNG], DEFAULT_ZOOM);\n  updateDisplay(true, true);\n});\n\n\n\n// üîß Asegura que Leaflet recalcula el tama√±o cuando la p√°gina carga o cambia de tama√±o\nwindow.addEventListener('load', () => setTimeout(() => map.invalidateSize(), 0));\nwindow.addEventListener('resize', () => map.invalidateSize());\n\nfunction updateDisplay(doZoom = false, updateMarkers = true) {\n  const cityVal = input.value.toLowerCase().trim();\n  const selectedStyles = Array.from(checkboxes).filter(cb => cb.checked).map(cb => cb.value);\n  const selectedLangs = Array.from(languageBoxes).filter(cb => cb.checked).map(cb => cb.value);\n  const selectedProf = professorSelect.value;\n\n  const filtered = centers.filter(c => {\n    const matchCity = c.city.toLowerCase().includes(cityVal);\n    const matchStyle = selectedStyles.length === 0 || c.styles.some(style => selectedStyles.includes(style));\n    const matchLang = selectedLangs.length === 0 || c.languages.some(lang => selectedLangs.includes(lang));\n    const matchProf = !selectedProf || c.professors.includes(selectedProf);\n    const matchNearby = !usingNearby || (\n      userLat !== null && userLng !== null &&\n      getDistance(userLat, userLng, c.lat, c.lng) <= 2\n    );\n    return matchNearby && matchCity && matchStyle && matchLang && matchProf;\n  });\n\n  listEl.innerHTML = \"\";\n  filtered.forEach(c => {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `<a href=\"${c.page}\">${c.name} (${c.city})</a>`;\n    listEl.appendChild(li);\n  });\n\n  noResults.style.display = filtered.length === 0 ? \"block\" : \"none\";\n\n  if (updateMarkers) {\n    markers.forEach(m => map.removeLayer(m));\n    markers = [];\n    filtered.forEach(c => {\n      const marker = L.marker([c.lat, c.lng]).addTo(map)\n        .bindPopup(`<a href=\"${c.page}\">${c.name}</a><br>${c.city}`);\n      markers.push(marker);\n    });\n  }\n\n  if (doZoom && cityVal) {\n    const exactMatch = centers.filter(c => c.city.toLowerCase() === cityVal);\n    if (exactMatch.length > 0) {\n      const avgLat = exactMatch.reduce((sum, c) => sum + c.lat, 0) / exactMatch.length;\n      const avgLng = exactMatch.reduce((sum, c) => sum + c.lng, 0) / exactMatch.length;\n      map.setView([avgLat, avgLng], 12);\n    }\n  }\n\n  if (doZoom && usingNearby && userLat && userLng) {\n    map.setView([userLat, userLng], 14);\n  }\n}\n\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  const toRad = deg => deg * Math.PI / 180;\n  const R = 6371;\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat/2)**2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLng/2)**2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\nfindNearbyBtn.addEventListener(\"click\", () => {\n  if (!usingNearby) {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation not supported\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(pos => {\n      userLat = pos.coords.latitude;\n      userLng = pos.coords.longitude;\n      usingNearby = true;\n\n      // Clear city input when nearby search is activated\n      input.value = \"\";\n      findNearbyBtn.textContent = \"‚úÖ Mostrando centros cerca de m√≠\";\n      updateDisplay(true, true);\n    }, () => {\n      alert(\"Unable to get location\");\n    });\n  } else {\n    usingNearby = false;\n    userLat = null;\n    userLng = null;\n    findNearbyBtn.textContent = \"Cerca de m√≠\";\n    updateDisplay(true, true);\n  }\n});\n\n\nfetch(\"data/centers.json\")\n  .then(res => res.json())\n  .then(data => {\n    centers = data;\n    return fetch(\"data/professors.json\");\n  })\n  .then(res => res.json())\n  .then(data => {\n    professors = data;\n    professors.forEach(p => {\n      const option = document.createElement(\"option\");\n      option.value = p.id;\n      option.textContent = p.name;\n      professorSelect.appendChild(option);\n    });\n    updateDisplay(true, true);\n  })\n  .then(() => {\n  return fetch(\"data/styles.json\");\n})\n.then(res => res.json())\n.then(styles => {\n  const container = document.getElementById(\"styleCheckboxes\");\n  styles.forEach(style => {\n    const label = document.createElement(\"label\");\n    label.innerHTML = `<input type=\"checkbox\" value=\"${style}\"> ${style}`;\n    container.appendChild(label);\n  });\n\n  // Reassign checkboxes variable now that they exist\n  checkboxes = document.querySelectorAll(\"#styleFilters input[type=checkbox]\");\n  checkboxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\n\n  // Also re-run URL params logic in case styles are pre-selected\n  const stylesParam = new URLSearchParams(window.location.search).get(\"styles\");\n  if (stylesParam) {\n    const styleValues = stylesParam.split(\",\");\n    checkboxes.forEach(cb => {\n      cb.checked = styleValues.includes(cb.value);\n    });\n  }\n\n  updateDisplay(true, true);\n});\n\n\n\n\n\ninput.addEventListener(\"focus\", () => {\n  suggestions.innerHTML = \"\";\n  // No mostramos nada al enfocar; se mostrar√° cuando el usuario escriba\n  suggestions.style.display = \"none\";\n});\n\n\ndocument.addEventListener(\"click\", (e) => {\n  if (!input.contains(e.target) && !suggestions.contains(e.target)) {\n    suggestions.style.display = \"none\";\n  }\n});\n\ninput.addEventListener(\"input\", () => {\n  const val = input.value.toLowerCase().trim();\n  suggestions.innerHTML = \"\";\n\n  // Si no hay texto, ocultamos el men√∫\n  if (val.length === 0) {\n    suggestions.style.display = \"none\";\n    return;\n  }\n\n  const allCities = [...new Set(centers.map(c => c.city))];\n  const matches = allCities.filter(c => c.toLowerCase().startsWith(val));\n\n  if (matches.length > 0) {\n    matches.forEach(city => {\n      const li = document.createElement(\"li\");\n      li.textContent = city;\n      li.style.padding = \"5px\";\n      li.style.cursor = \"pointer\";\n      li.addEventListener(\"click\", () => {\n        usingNearby = false;\n        userLat = null;\n        userLng = null;\n        findNearbyBtn.textContent = \"Cerca de m√≠\";\n        input.value = city;\n        suggestions.style.display = \"none\";\n        updateDisplay(true, true);\n      });\n      suggestions.appendChild(li);\n    });\n    suggestions.style.display = \"block\";\n  } else {\n    suggestions.style.display = \"none\";\n  }\n});\n\ncheckboxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\nlanguageBoxes.forEach(cb => cb.addEventListener(\"change\", () => updateDisplay(false, true)));\nprofessorSelect.addEventListener(\"change\", () => updateDisplay(false, true));\n\n\n// Read URL parameters on page load\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // City\n  const cityParam = urlParams.get(\"city\");\n  if (cityParam) {\n    input.value = cityParam;\n  }\n\n  // Yoga styles (comma-separated)\n  const stylesParam = urlParams.get(\"styles\");\n  if (stylesParam) {\n    const styleValues = stylesParam.split(\",\");\n    checkboxes.forEach(cb => {\n      cb.checked = styleValues.includes(cb.value);\n    });\n  }\n\n  // Languages (comma-separated)\n  const langsParam = urlParams.get(\"langs\");\n  if (langsParam) {\n    const langValues = langsParam.split(\",\");\n    languageBoxes.forEach(cb => {\n      cb.checked = langValues.includes(cb.value);\n    });\n  }\n\n  // Professor (exact id)\n  const profParam = urlParams.get(\"prof\");\n  if (profParam) {\n    professorSelect.value = profParam;\n  }\n\n  // Nearby search\n  const nearbyParam = urlParams.get(\"nearby\");\n  if (nearbyParam === \"1\") {\n    findNearbyBtn.click();\n  } else {\n    updateDisplay(true, true);\n  }\n});\n\n\n\n</script>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"output-file":"map.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.53","resources":["data/centers.json","data/professors.json","data/styles.json"],"theme":"flatly","title":"Encuentra tu centro","page-layout":"full"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}