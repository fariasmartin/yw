---
title: "¬ßtitle"
---

<link href="https://fonts.googleapis.com/css2?family=Savate&display=swap" rel="stylesheet">

<style>
  :root{ --burdeos:#800000; --gris-claro:#f7f5f5; --borde:#e6e6e6; }
  body{ font-family:'Savate', sans-serif; }
  .center-wrap{ max-width:1100px; margin:0 auto; padding:1rem 1.25rem; }
  .center-hero h1{
  margin: 0 0 .6rem 0;                 /* m√°s aire debajo */
  font-size: clamp(1.7rem, 2.6vw, 2.2rem);
  line-height: 1.2;
}
  .center-sub{ color:#555; margin:.2rem 0 1rem 0; }
  .cta-row{ display:flex; gap:.6rem; flex-wrap:wrap; margin:.4rem 0 1rem; }
  .btn{ background:var(--burdeos); color:#fff; border:none; border-radius:10px; padding:.55rem .9rem; font-weight:700; text-decoration:none; display:inline-block; }
  .btn.outline{ background:#fff; color:var(--burdeos); border:1px solid var(--burdeos); }
  .btn:hover{ filter:brightness(.95); }
  .grid{ display:grid; grid-template-columns: 1.25fr .75fr; gap:1.2rem; align-items:start; }
  .card{ background:var(--gris-claro); border:1px solid var(--borde); border-radius:14px; padding:1rem 1.2rem; box-shadow:0 2px 6px rgba(0,0,0,.05); }
  .section-title{ margin:.2rem 0 .6rem; font-size:1.1rem; }
  .chips{ display:flex; flex-wrap:wrap; gap:.5rem; margin:.4rem 0 .8rem; }
  .chip{ background:#fff; border:1px solid var(--borde); border-radius:999px; padding:.25rem .65rem; font-size:.95rem; }
  .meta-list{
  list-style: none;      /* ‚Üê sin vi√±etas */
  margin: 0;
  padding-left: 0;       /* ‚Üê sin sangr√≠a */
}
  .prof-list a{ text-decoration:none; color:var(--burdeos); }
  .prof-list a:hover{ text-decoration:underline; }
  @media(max-width: 900px){ .grid{ grid-template-columns: 1fr; } }


  .crumbs{
  font-size: .95rem;
  color: #666;
  margin: .25rem 0 1rem;
}
.crumbs a{ color: inherit; text-decoration: none; }
.crumbs a:hover{ text-decoration: underline; }
</style>

<div id="centerInfo">Loading...</div>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  const centerId = "¬ßid";
  const container = document.getElementById("centerInfo");

  // Detecta si estamos en /centers/ para ajustar las rutas
  const BASE = location.pathname.includes('/centers/') ? '..' : '.';
  const CENTERS_URL = `${BASE}/data/centers.json`;
  const PROFS_URL   = `${BASE}/data/professors.json`;

  console.log('[center page] path:', location.pathname);
  console.log('[center page] base:', BASE);
  console.log('[center page] centerId:', centerId);

  try {
    const [centersRes, profsRes] = await Promise.all([
      fetch(CENTERS_URL),
      fetch(PROFS_URL)
    ]);

    if (!centersRes.ok || !profsRes.ok) {
      throw new Error(`Fetch failed: centers(${centersRes.status}) profs(${profsRes.status})`);
    }

    const [centers, professors] = await Promise.all([
      centersRes.json(),
      profsRes.json()
    ]);

    const center = centers.find(c => c.id === centerId);
    if (!center) {
      console.warn('[center page] Center not found. Available ids:', centers.map(c => c.id));
      container.innerHTML = "<div class='center-wrap'><div class='card'><p>Center not found.</p></div></div>";
      return;
    }

    const profData = (center.professors || [])
      .map(pid => professors.find(p => p.id === pid))
      .filter(Boolean);

    container.innerHTML = `
      <div class="center-wrap">


        <div class="center-hero">
          <div class="cta-row">
            <a class="btn outline" href="${BASE}/map.html">‚Üê Volver al mapa</a>
            ${center.website ? `<a class="btn" href="${center.website}" target="_blank" rel="noopener">Sitio web</a>` : ``}
          </div>
        </div>


        <div class="grid">
          <div class="card">
            <h3 class="section-title">Sobre ${center.name}</h3>
            <p>${center.description ? center.description : `Bienvenido a la p√°gina de ${center.name} en ${center.city}.`}</p>

            <h3 class="section-title">Estilos de yoga</h3>
            <div class="chips">
              ${(center.styles || []).map(s => `<span class="chip">${s}</span>`).join("")}
            </div>

            <h3 class="section-title">Idiomas</h3>
            <div class="chips">
              ${(center.languages || []).map(l => `<span class="chip">${l}</span>`).join("")}
            </div>

            <h3 class="section-title">Profesores</h3>
            ${profData.length
              ? `<ul class="meta-list prof-list">
                   ${profData.map(p => {
                     const slug = p.id.toLowerCase().replace(/\s+/g,'-');
                     return `<li><a href="${BASE}/professors/${slug}.html">${p.name}</a></li>`;
                   }).join("")}
                 </ul>`
              : `<p>‚Äî</p>`}
          </div>

          <div class="card">
            <h3 class="section-title">Detalles</h3>
            <ul class="meta-list">
              <li>üìç ${center.city}</li>
              ${center.address ? `<li>üè† ${center.address}</li>` : ``}
              ${center.phone ? `<li>üìû ${center.phone}</li>` : ``}
              ${center.email ? `<li>‚úâÔ∏è <a href="mailto:${center.email}">${center.email}</a></li>` : ``}
              ${center.website ? `<li>üåê <a href="${center.website}" target="_blank" rel="noopener">${center.website.replace(/^https?:\/\//,'')}</a></li>` : ``}
            </ul>
          </div>
        </div>
      </div>
    `;
  } catch (err) {
    console.error('[center page] Error:', err);
    container.innerHTML = "<div class='center-wrap'><div class='card'><p>Error loading data.</p></div></div>";
  }
});
</script>
